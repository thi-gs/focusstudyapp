C:\Users\Thiago\Desktop\trab\app\src\main\AndroidManifest.xml:20: Error: Class referenced in the manifest, com.example.studytimer.ui.MainActivity, was not found in the project or the libraries [MissingClass]
        <activity android:name=".ui.MainActivity" />
                                ~~~~~~~~~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\src\main\AndroidManifest.xml:21: Error: Class referenced in the manifest, com.example.studytimer.ui.TimerActivity, was not found in the project or the libraries [MissingClass]
        <activity android:name=".ui.TimerActivity" />
                                ~~~~~~~~~~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\src\main\AndroidManifest.xml:22: Error: Class referenced in the manifest, com.example.studytimer.ui.HistoryActivity, was not found in the project or the libraries [MissingClass]
        <activity android:name=".ui.HistoryActivity" />
                                ~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "MissingClass":
   If a class is referenced in the manifest or in a layout file, it must also
   exist in the project (or in one of the libraries included by the project.
   This check helps uncover typos in registration names, or attempts to rename
   or move classes without updating the XML references properly.

   https://developer.android.com/guide/topics/manifest/manifest-intro.html

C:\Users\Thiago\Desktop\trab\app\build.gradle:39: Warning: A newer version of androidx.core:core-ktx than 1.12.0 is available: 1.16.0 [GradleDependency]
    implementation "androidx.core:core-ktx:1.12.0"
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\build.gradle:40: Warning: A newer version of androidx.appcompat:appcompat than 1.6.1 is available: 1.7.0 [GradleDependency]
    implementation "androidx.appcompat:appcompat:1.6.1"
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\build.gradle:41: Warning: A newer version of com.google.android.material:material than 1.11.0 is available: 1.12.0 [GradleDependency]
    implementation "com.google.android.material:material:1.11.0"
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\build.gradle:42: Warning: A newer version of androidx.constraintlayout:constraintlayout than 2.1.4 is available: 2.2.1 [GradleDependency]
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\build.gradle:45: Warning: A newer version of androidx.room:room-ktx than 2.6.1 is available: 2.7.1 [GradleDependency]
    implementation "androidx.room:room-ktx:2.6.1"
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\build.gradle:46: Warning: A newer version of androidx.room:room-runtime than 2.6.1 is available: 2.7.1 [GradleDependency]
    implementation "androidx.room:room-runtime:2.6.1"
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\build.gradle:47: Warning: A newer version of androidx.room:room-compiler than 2.6.1 is available: 2.7.1 [GradleDependency]
    kapt "androidx.room:room-compiler:2.6.1"
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\build.gradle:53: Warning: A newer version of androidx.test.ext:junit than 1.1.5 is available: 1.2.1 [GradleDependency]
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\build.gradle:54: Warning: A newer version of androidx.test.espresso:espresso-core than 3.5.1 is available: 3.6.1 [GradleDependency]
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

C:\Users\Thiago\Desktop\trab\app\src\main\res\values\styles.xml:11: Warning: Unnecessary; SDK_INT is always >= 21 [ObsoleteSdkInt]
        <item name="android:statusBarColor" tools:targetApi="l">@color/purple_700</item>
                                            ~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "ObsoleteSdkInt":
   This check flags version checks that are not necessary, because the
   minSdkVersion (or surrounding known API level) is already at least as high
   as the version checked for.

   Similarly, it also looks for resources in -vNN folders, such as values-v14
   where the version qualifier is less than or equal to the minSdkVersion,
   where the contents should be merged into the best folder.

C:\Users\Thiago\Desktop\trab\app\build.gradle:47: Warning: This library supports using KSP instead of kapt, which greatly improves performance. Learn more: https://developer.android.com/studio/build/migrate-to-ksp [KaptUsageInsteadOfKsp]
    kapt "androidx.room:room-compiler:2.6.1"
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "KaptUsageInsteadOfKsp":
   KSP is a more efficient replacement for kapt. For libraries that support
   both, KSP should be used to improve build times.

   https://developer.android.com/studio/build/migrate-to-ksp

C:\Users\Thiago\Desktop\trab\app\src\main\res\layout\item_session.xml:6: Warning: Possible overdraw: Root element paints background #EEEEEE with a theme that also paints a background (inferred theme is @style/Theme.FocusStudyApp) [Overdraw]
    android:background="#EEEEEE"
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "Overdraw":
   If you set a background drawable on a root view, then you should use a
   custom theme where the theme background is null. Otherwise, the theme
   background will be painted first, only to have your custom background
   completely cover it; this is called "overdraw".

   NOTE: This detector relies on figuring out which layouts are associated
   with which activities based on scanning the Java code, and it's currently
   doing that using an inexact pattern matching algorithm. Therefore, it can
   incorrectly conclude which activity the layout is associated with and then
   wrongly complain that a background-theme is hidden.

   If you want your custom background on multiple pages, then you should
   consider making a custom theme with your custom background and just using
   that theme instead of a root element background.

   Of course it's possible that your custom drawable is translucent and you
   want it to be mixed with the background. However, you will get better
   performance if you pre-mix the background with your drawable and use that
   resulting image or color as a custom theme background instead.

C:\Users\Thiago\Desktop\trab\app\src\main\res\layout\activity_history.xml:1: Warning: The resource R.layout.activity_history appears to be unused [UnusedResources]
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
^
C:\Users\Thiago\Desktop\trab\app\src\main\res\layout\activity_register.xml:1: Warning: The resource R.layout.activity_register appears to be unused [UnusedResources]
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
^
C:\Users\Thiago\Desktop\trab\app\src\main\res\layout\activity_timer.xml:1: Warning: The resource R.layout.activity_timer appears to be unused [UnusedResources]
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
^
C:\Users\Thiago\Desktop\trab\app\src\main\res\layout\item_session.xml:1: Warning: The resource R.layout.item_session appears to be unused [UnusedResources]
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
^
C:\Users\Thiago\Desktop\trab\app\src\main\res\values\strings.xml:2: Warning: The resource R.string.app_name appears to be unused [UnusedResources]
    <string name="app_name">Study Timer</string>
            ~~~~~~~~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\src\main\res\values\strings.xml:4: Warning: The resource R.string.register appears to be unused [UnusedResources]
    <string name="register">Registrar</string>
            ~~~~~~~~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\src\main\res\values\strings.xml:7: Warning: The resource R.string.session_title appears to be unused [UnusedResources]
    <string name="session_title">Título da Sessão</string>
            ~~~~~~~~~~~~~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\src\main\res\values\strings.xml:8: Warning: The resource R.string.start appears to be unused [UnusedResources]
    <string name="start">Iniciar</string>
            ~~~~~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\src\main\res\values\strings.xml:9: Warning: The resource R.string.stop appears to be unused [UnusedResources]
    <string name="stop">Parar</string>
            ~~~~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\src\main\res\values\strings.xml:10: Warning: The resource R.string.history appears to be unused [UnusedResources]
    <string name="history">Histórico</string>
            ~~~~~~~~~~~~~~

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.


   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests =true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests =true.
   ,

C:\Users\Thiago\Desktop\trab\app\src\main\res\mipmap-anydpi-v26\ic_launcher.xml:2: Warning: The application adaptive icon is missing a monochrome tag [MonochromeLauncherIcon]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^
C:\Users\Thiago\Desktop\trab\app\src\main\res\mipmap-anydpi-v26\ic_launcher_round.xml:2: Warning: The application adaptive roundIcon is missing a monochrome tag [MonochromeLauncherIcon]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^

   Explanation for issues of type "MonochromeLauncherIcon":
   If android:roundIcon and android:icon are both in your manifest, you must
   either remove the reference to android:roundIcon if it is not needed; or,
   supply the monochrome icon in the drawable defined by the android:roundIcon
   and android:icon attribute.

   For example, if android:roundIcon and android:icon are both in the
   manifest, a launcher might choose to use android:roundIcon over
   android:icon to display the adaptive app icon. Therefore, your themed
   application iconwill not show if your monochrome attribute is not also
   specified in android:roundIcon.

C:\Users\Thiago\Desktop\trab\app\src\main\res\layout\activity_login.xml:7: Warning: This text field does not specify an inputType [TextFields]
    <EditText
     ~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\src\main\res\layout\activity_register.xml:7: Warning: This text field does not specify an inputType [TextFields]
    <EditText
     ~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\src\main\res\layout\activity_timer.xml:7: Warning: This text field does not specify an inputType [TextFields]
    <EditText
     ~~~~~~~~

   Explanation for issues of type "TextFields":
   Providing an inputType attribute on a text field improves usability because
   depending on the data to be input, optimized keyboards can be shown to the
   user (such as just digits and parentheses for a phone number). 

   The lint detector also looks at the id of the view, and if the id offers a
   hint of the purpose of the field (for example, the id contains the phrase
   phone or email), then lint will also ensure that the inputType contains the
   corresponding type attributes.

   If you really want to keep the text field generic, you can suppress this
   warning by setting inputType="text".

C:\Users\Thiago\Desktop\trab\app\src\main\res\layout\activity_login.xml:7: Warning: Missing autofillHints attribute [Autofill]
    <EditText
     ~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\src\main\res\layout\activity_login.xml:13: Warning: Missing autofillHints attribute [Autofill]
    <EditText
     ~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\src\main\res\layout\activity_register.xml:7: Warning: Missing autofillHints attribute [Autofill]
    <EditText
     ~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\src\main\res\layout\activity_register.xml:13: Warning: Missing autofillHints attribute [Autofill]
    <EditText
     ~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\src\main\res\layout\activity_timer.xml:7: Warning: Missing autofillHints attribute [Autofill]
    <EditText
     ~~~~~~~~

   Explanation for issues of type "Autofill":
   Specify an autofillHints attribute when targeting SDK version 26 or higher
   or explicitly specify that the view is not important for autofill. Your app
   can help an autofill service classify the data correctly by providing the
   meaning of each view that could be autofillable, such as views representing
   usernames, passwords, credit card fields, email addresses, etc.

   The hints can have any value, but it is recommended to use predefined
   values like 'username' for a username or 'creditCardNumber' for a credit
   card number. For a list of all predefined autofill hint constants, see the
   AUTOFILL_HINT_ constants in the View reference at
   https://developer.android.com/reference/android/view/View.html.

   You can mark a view unimportant for autofill by specifying an
   importantForAutofill attribute on that view or a parent view. See
   https://developer.android.com/reference/android/view/View.html#setImportant
   ForAutofill(int).

   https://developer.android.com/guide/topics/text/autofill.html

C:\Users\Thiago\Desktop\trab\app\src\main\res\layout\activity_login.xml:30: Warning: Hardcoded string "Não tem conta? Cadastre-se", should use @string resource [HardcodedText]
        android:text="Não tem conta? Cadastre-se"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\src\main\res\layout\activity_main.xml:12: Warning: Hardcoded string "Iniciar Sessão de Estudo", should use @string resource [HardcodedText]
        android:text="Iniciar Sessão de Estudo" />
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\src\main\res\layout\activity_main.xml:19: Warning: Hardcoded string "Ver Histórico", should use @string resource [HardcodedText]
    android:text="Ver Histórico" />
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\src\main\res\layout\activity_timer.xml:17: Warning: Hardcoded string "00:00", should use @string resource [HardcodedText]
        android:text="00:00"
        ~~~~~~~~~~~~~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\src\main\res\layout\item_session.xml:13: Warning: Hardcoded string "Título", should use @string resource [HardcodedText]
        android:text="Título" />
        ~~~~~~~~~~~~~~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\src\main\res\layout\item_session.xml:19: Warning: Hardcoded string "Duração", should use @string resource [HardcodedText]
        android:text="Duração" />
        ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Thiago\Desktop\trab\app\src\main\res\layout\item_session.xml:25: Warning: Hardcoded string "Data", should use @string resource [HardcodedText]
        android:text="Data" />
        ~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "HardcodedText":
   Hardcoding text attributes directly in layout files is bad for several
   reasons:

   * When creating configuration variations (for example for landscape or
   portrait) you have to repeat the actual text (and keep it up to date when
   making changes)

   * The application cannot be translated to other languages by just adding
   new translations for existing string resources.

   There are quickfixes to automatically extract this hardcoded string into a
   resource lookup.

3 errors, 39 warnings
